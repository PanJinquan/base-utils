cmake_minimum_required(VERSION 3.5)
project(scan3d-capture)

set(CMAKE_CXX_STANDARD 11)
#SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++11 -lGL -lglut -lGLU ")
#SET( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -g -std=c++11 -lGL -lglut -lGLU")

# 配置OpenCV库
find_package(OpenCV REQUIRED) # 对应的库：${OpenCV_LIBS}
include_directories(${OpenCV_INCLUDE_DIRS} ./src/)

# 配置OpenGL依赖库
# https://blog.csdn.net/weixin_42444571/article/details/115051488
if (POLICY CMP0072)
    # Fix a Warning: OpenGL_GL_PREFERENCE has not been set to "GLVND" or "LEGACY"
    set(OpenGL_GL_PREFERENCE LEGACY)
endif ()
find_package(OpenGL REQUIRED)# 对应的库：${OPENGL_LIBRARIES}
include_directories(${OPENGL_INCLUDE_DIRS})
#find_package(GLUT REQUIRED) # 对应的库：${GLUT_LIBRARIES}
#include_directories(${GLUT_INCLUDE_DIRS})

# 配置QT
set(QT_LIBS Qt5::Core Qt5::Gui Qt5::Widgets)
find_package(Qt5 COMPONENTS Core Gui Widgets REQUIRED)
set(QT_GL_LIBS Qt5::OpenGL)
find_package(Qt5OpenGL REQUIRED)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

#如果头文件中使用了QT，则调用MOC进行处理，相当于*.pri配置中的HEADERS
QT5_WRAP_CPP(HEADERS
        src/io_util.hpp
        src/im_util.hpp
        src/Application.hpp
        src/MainWindow.hpp
        src/AboutDialog.hpp
        src/ProcessingDialog.hpp
        src/CalibrationDialog.hpp
        src/CaptureDialog.hpp
        src/VideoInput.hpp
        src/ImageLabel.hpp
        src/ProjectorWidget.hpp
        src/TreeModel.hpp
        src/CalibrationData.hpp
        src/structured_light.hpp
        src/scan3d.hpp
        src/GLWidget.hpp
        )
#使用uic将*.ui文件转为对应的头文件,相当于*.pri配置中的FORMS
QT5_WRAP_UI(FORMS
        forms/MainWindow.ui
        forms/CaptureDialog.ui
        forms/AboutDialog.ui
        forms/ProcessingDialog.ui
        forms/CalibrationDialog.ui
        )

# 源文件
set(SOURCES
        src/io_util.cpp
        src/im_util.cpp
        src/Application.cpp
        src/MainWindow.cpp
        src/AboutDialog.cpp
        src/CaptureDialog.cpp
        src/VideoInput.cpp
        src/ProcessingDialog.cpp
        src/CalibrationDialog.cpp
        src/ImageLabel.cpp
        src/ProjectorWidget.cpp
        src/TreeModel.cpp
        src/CalibrationData.cpp
        src/structured_light.cpp
        src/scan3d.cpp
        src/GLWidget.cpp
        )

#使用rcc处理.qrc文件，相当于*.pri配置中的RESOURCES，常见的错误：‘qInitResources_assets()’未定义的引用
QT5_ADD_RESOURCES(RESOURCES assets/assets.qrc)

message(STATUS "USE QT5_WRAP")
set(QT_SRC ${HEADERS} ${FORMS} ${RESOURCES})
include_directories(src)
add_executable(${PROJECT_NAME} src/main.cpp ${SOURCES} ${QT_SRC})
target_link_libraries(
        ${PROJECT_NAME}
        ${QT_LIBS}
        ${OpenCV_LIBS}
        ${QT_GL_LIBS}
        ${OPENGL_LIBRARIES}
)

